<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
	Note: This began with the Sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

	This has been slightly modified to fit our internal standards (and to relax
	several of the more rigid checks).
-->

<module name="Checker">

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
    <!--module name="JavadocPackage"/-->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
		<property name="lineSeparator" value="lf"/>
	</module>


    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="TreeWalker">
        <module name="UnusedImports"/>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="120"/>
	        <property name="ignorePattern" value="^import"/>
        </module>

        <!-- Check that method bodies are at most 15 lines, excluding blanks and comments -->
        <module name="MethodLength">
          <!--
            checkstyle counts the opening and closing braces towards the method line count,
            so we specify 17 instead of 15 as the max method length.
          -->
          <property name="max" value="17"/>
          <property name="countEmpty" value="false"/>
          <property name="severity" value="warning"/>
        </module>

        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Whitespace checks                             -->
        <!--
          These whitespace rules are adapted from google's java client checkstyle config:
          https://code.google.com/p/google-api-java-client/source/browse/checkstyle.xml
        -->
        <module name="WhitespaceAround">
            <!--
              Checks that various tokens are surrounded by whitespace.
              This includes most binary operators and keywords followed
              by regular or curly braces.
            -->
            <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN"/>
        </module>

        <module name="WhitespaceAfter">
            <!--
              Checks that commas, semicolons and typecasts are followed by whitespace.
            -->
            <property name="tokens" value="COMMA, SEMI, TYPECAST"/>
        </module>

        <module name="NoWhitespaceAfter">
            <!--
              Checks that there is no whitespace after various unary operators.
              Linebreaks are allowed.
            -->
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS"/>
            <property name="allowLineBreaks" value="true"/>
        </module>

        <module name="NoWhitespaceBefore">
            <!--
              Checks that there is no whitespace before various unary operators.
              Linebreaks are allowed.
            -->
            <property name="tokens" value="SEMI, DOT, POST_DEC, POST_INC"/>
            <property name="allowLineBreaks" value="true"/>
        </module>

        <module name="ParenPad">
            <!--
             Checks that there is no whitespace before close parens or after open parens.
            -->
            <property name="severity" value="warning"/>
        </module>



        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="FinalParameters"/>

    </module>

</module>
